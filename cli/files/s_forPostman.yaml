openapi: 3.0.3
info:
  title: Simple
  description: Simple REST API developed with Lumen 5.8
  version: 1.0.0
servers:
- url: http://localhost:8000
paths:
  /:
    get:
      summary: http://localhost:8000
      description: REST API Index
      operationId: http://localhost:8000
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      responses:
        200:
          description: Successful response
  /v1/auth/login:
    post:
      summary: http://localhost:8000/v1/auth/login
      description: Authenticate a user by its email and password
      operationId: http://localhost:8000/v1/auth/login
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        example: "application/json"
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      x-codegen-request-body-name: rest_service65request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rest_service65request'
            example: {"email":"frukerickjeff@gmail.com","password":"secret23"}
        required: false
      responses:
        200:
          description: Successful response
  /v1/auth/register:
    post:
      summary: http://localhost:8000/v1/auth/register
      description: Register a new user in the database
      operationId: http://localhost:8000/v1/auth/register
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        example: "application/json"
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      x-codegen-request-body-name: rest_service32request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rest_service32request'
            example: {"first_name":"Fru","last_name":"Kerick","email":"frukerickjeff@gmail.com","password":"secret23","password_confirmation":"secret23"}
        required: false
      responses:
        200:
          description: Successful response
  /v1/posts:
    get:
      summary: http://localhost:8000/v1/posts?limit={limit}&page={page}
      description: Retrieve all posts from the database
      operationId: http://localhost:8000/v1/posts?limit={limit}&page={page}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "rpEEbYoWLacQ0uNCqL21efTUL8LVI0PQ3IFdDvijno2gg8GO1GpTPuVKok2AKiSf"
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
        example: '"1"'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
        example: '"2"'
      responses:
        200:
          description: Successful response
  /v1/posts/:
    post:
      summary: http://localhost:8000/v1/posts/
      description: Save a post in the database. Requires authenticated.
      operationId: http://localhost:8000/v1/posts/
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        example: '"application/json"'
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        example: '"Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3N1ZXIiOiJzaW1wbGUtand0IiwiaWQiOjEyLCJpc3N1ZWRfYXQiOjE1NTIzNDY4NzMsImV4cGlyZXMiOjE1NTI0MzMyNzN9.iYC5eScdYP4sgYQBCAhxdfx0uqIhHEj0JV9Mqqj4WZY"'
      x-codegen-request-body-name: rest_service95request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rest_service95request'
            example: {"user_id":12,"title":"Post Title","description":"Post description..."}
        required: false
      responses:
        200:
          description: Successful response
  /v1/posts/5:
    get:
      summary: http://localhost:8000/v1/posts/{id}
      description: Retrieve a single post from the database by its ID
      operationId: http://localhost:8000/v1/posts/{id}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      responses:
        200:
          description: Successful response
  /v1/posts/6:
    delete:
      summary: http://localhost:8000/v1/posts/{id}
      description: Delete a post from the database. Requires authenticated. Only the
        user who created the post is authorized to perform this action.
      operationId: rEST_Service2
      parameters:
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        example: "Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3N1ZXIiOiJzaW1wbGUtand0IiwiaWQiOjEyLCJpc3N1ZWRfYXQiOjE1NTIzNDY4NzMsImV4cGlyZXMiOjE1NTI0MzMyNzN9.iYC5eScdYP4sgYQBCAhxdfx0uqIhHEj0JV9Mqqj4WZY"
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      responses:
        200:
          description: Successful response
    put:
      summary: http://localhost:8000/v1/posts/{id}
      description: Update a post in the database. Requires authenticated. Only the
        user who created the post is authorized to perform this action.
      operationId: rEST_Service
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        example: "application/json"
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        example: '"Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3N1ZXIiOiJzaW1wbGUtand0IiwiaWQiOjEyLCJpc3N1ZWRfYXQiOjE1NTIzNDY4NzMsImV4cGlyZXMiOjE1NTI0MzMyNzN9.iYC5eScdYP4sgYQBCAhxdfx0uqIhHEj0JV9Mqqj4WZY"'
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      x-codegen-request-body-name: rest_service196request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rest_service196request'
            example: {"title":"Post Title Changed","description":"Post descriptionchanged"}
        required: false
      responses:
        200:
          description: Successful response
  /v1/posts/post-title:
    get:
      summary: http://localhost:8000/v1/posts/{slug}
      description: Retrieve a single post from the database by its slug
      operationId: http://localhost:8000/v1/posts/{slug}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      responses:
        200:
          description: Successful response
  /v1/users:
    get:
      summary: http://localhost:8000/v1/users?limit={limit}&page={page}
      description: Retrieve all users from the database
      operationId: http://localhost:8000/v1/users?limit={limit}&page={page}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
        example: '"2"'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
        example: '"3"'
      responses:
        200:
          description: Successful response
  /v1/users/12:
    get:
      summary: http://localhost:8000/v1/users/{id}
      description: Retrieve a single user from the database by its ID
      operationId: http://localhost:8000/v1/users/{id}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      responses:
        200:
          description: Successful response
  /v1/users/delete:
    delete:
      summary: http://localhost:8000/v1/users/delete
      description: Delete a user record in the datatabase. Requires authentication.
        User is only authorized to delete his/her details.
      operationId: http://localhost:8000/v1/users/delete
      parameters:
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        example: "Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3N1ZXIiOiJzaW1wbGUtand0IiwiaWQiOjE3LCJpc3N1ZWRfYXQiOjE1NTI0MzU3MjgsImV4cGlyZXMiOjE1NTI1MjIxMjh9.RhPDxlqiXPsS7g_7H0ANqSPQbZvrofFej6r6raQwXIU"
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      responses:
        200:
          description: Successful response
  /v1/users/fru-kerick-3:
    get:
      summary: http://localhost:8000/v1/users/{slug}
      description: Retrieve a single user from the database by its slug
      operationId: http://localhost:8000/v1/users/{slug}
      parameters:
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: "OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"
      responses:
        200:
          description: Successful response
  /v1/users/update:
    put:
      summary: http://localhost:8000/v1/users/update
      description: Update a user record in the datatabase. Requires authentication.
        User is only authorized to update his/her details.
      operationId: http://localhost:8000/v1/users/update
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
        example: "application/json"
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
        example: '"Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3N1ZXIiOiJzaW1wbGUtand0IiwiaWQiOjEyLCJpc3N1ZWRfYXQiOjE1NTIzNDY4NzMsImV4cGlyZXMiOjE1NTI0MzMyNzN9.iYC5eScdYP4sgYQBCAhxdfx0uqIhHEj0JV9Mqqj4WZY"'
      - name: x-api-key
        in: header
        required: false
        schema:
          type: string
        example: '"OfJr4qriSrw7iZMpaWJm4OOrjGdfCgzrMQvTUkx7quaejgyokYy95yhnpjaLoiBT"'
      x-codegen-request-body-name: rest_service321request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rest_service321request'
            example: {"last_name":"k3r1ck","email":"fru@k3r1ck.com"}
        required: false
      responses:
        200:
          description: Successful response
components:
  schemas:
    rest_service32request:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
    rest_service196request:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    rest_service95request:
      type: object
      properties:
        user_id:
          type: string
        title:
          type: string
        description:
          type: string
    rest_service321request:
      type: object
      properties:
        last_name:
          type: string
        email:
          type: string
    rest_service65request:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
